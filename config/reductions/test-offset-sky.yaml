type: huntsman.drp.reduction.offsetsky.OffsetSkyReduction
name: example-offsetsky-reduction

# This query is used to select science / target exposures
query:
  document_filter:
    observation_type: science
    object: DoradoGroup-p0p0
    physical_filter:
      "$in":
        - g_band
  quality_filter: true
  limit: 1

# This query is used to select offset sky exposures
sky_query:
  document_filter:
    observation_type: science
    object: DoradoGroup-p0p0_sky
    physical_filter:
      "$in":
        - g_band
  quality_filter: true
  limit: 1

# This is the maximum allowed time difference between target and sky exposures
timedelta_minutes: 60

# Define the pipeline to process the offset sky exposures
# This is run before processing the science exposures
sky_pipeline:
  description: "Calibrate raw sky exposures and make master sky images"
  imports:
    - location: ${OBS_HUNTSMAN}/pipelines/ProcessCcd.yaml
  tasks:
    makeOffsetSkyBackground:
      class: lsst.obs.huntsman.tasks.makeOffsetSkyBackground.MakeOffsetSkyBackgroundTask

# Define the pipeline to process the science exposures
pipeline:
  description: "Calibrate raw exposures and make coadds"
  tasks:
    isr:
      class: lsst.ip.isr.IsrTask
    characterizeImage:
      class: lsst.obs.huntsman.tasks.characterizeImage.HuntsmanCharacterizeImageTask
    calibrate:
      class: lsst.obs.huntsman.tasks.offsetSkyCalibrate.OffsetSkyCalibrateTask
    makeWarp:
      class: lsst.pipe.tasks.makeCoaddTempExp.MakeWarpTask
      config:
        connections.calexpType: offsetSky
    assembleCoadd:
      class: lsst.pipe.tasks.assembleCoadd.AssembleCoaddTask
