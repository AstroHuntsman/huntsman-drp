#!/usr/bin/env python3

# https://pythonspeed.com/articles/python-multiprocessing/
from multiprocessing import set_start_method
set_start_method("spawn")  # Do this as early as possible

import os
import argparse

from huntsman.drp.core import get_config, get_logger
from huntsman.drp.utils.service import create_service


CONFIG = get_config()
LOGGER = get_logger()


def set_niceness():
    """ Set niceness level from config """
    niceness = CONFIG.get("niceness", None)
    LOGGER.info(f"Setting niceness to: {niceness}")
    if niceness:
        os.nice(niceness - os.nice(0))


def wait_for_nameserver():
    """ Wrapper to catch ImportError if Pyro is not installed. """
    try:
        from huntsman.drp.utils.pyro import wait_for_nameserver
        wait_for_nameserver(config=CONFIG, logger=LOGGER)
    except ImportError:
        pass


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("service_type", type=str, help="The name of the python class to run.")
    args = parser.parse_args()

    set_niceness()

    wait_for_nameserver()

    service = create_service(args.service_type, config=CONFIG, logger=LOGGER)

    service.start()
