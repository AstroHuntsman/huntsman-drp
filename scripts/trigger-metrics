#!/usr/bin/env python3
""" Trigger metrics to be reprocessed. """
import argparse
from contextlib import suppress

from huntsman.drp.collection import ExposureCollection

from huntsman.drp.utils.ingest import METRIC_SUCCESS_FLAG
from huntsman.drp.services.calexp import CALEXP_METRIC_TRIGGER

UPDATE_RAW = {f"metrics.{METRIC_SUCCESS_FLAG}": False}
UPDATE_CALEXP = {f"metrics.calexp.{CALEXP_METRIC_TRIGGER}": True}


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("--calexp", action="store_true",
                        help="If provided, update calexp metrics instead of raw metrics.")
    args = parser.parse_args()

    raw = ExposureCollection()

    if args.calexp:
        document_filter = {"observation_type": "science"}
        update = UPDATE_CALEXP
    else:
        document_filter = {}
        update = UPDATE_RAW

    for doc in raw.find(document_filter, screen=False, quality_filter=False):
        with suppress(KeyError):
            raw.update_one(doc, update)
